# SERVER CONFIGURATION
# Port on which server will listen for incoming connections
server.port=8079
# SPRING DATA JPA CONFIGURATION
# Hibernate DDL auto (none, validate, update, create, create-drop)
spring.jpa.hibernate.ddl-auto=none
# Database dialect for JPA and Hibernate
spring.jpa.database=POSTGRESQL
# Database platform to be used by Spring Boot
spring.datasource.platform=postgres
# Enables logging of SQL statements
spring.jpa.show-sql=true
# Strategy for naming database elements
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
# Hibernate dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# Database driver class
spring.database.driverClassName=org.postgresql.Driver
# Check the connection while it is idle
spring.datasource.testWhileIdle=true
# SQL query to validate connections from the pool
spring.datasource.validationQuery=SELECT 1
# MANAGEMENT ENDPOINTS CONFIGURATION
# Endpoints exposed over HTTP
management.endpoints.web.exposure.include=*
# Enable all endpoints by default
management.endpoints.enabled-by-default=true
# EUREKA CONFIGURATION
# Use IP address for communication
eureka.instance.preferIpAddress=true
# Register this service with Eureka
eureka.client.registerWithEureka=true
# Fetch the registry from Eureka
eureka.client.fetchRegistry=true
