version: '3.7'

services:
  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "ostock_dev"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  config-server:
    image: ostock/config-server:0.0.1-SNAPSHOT
    ports:
      - "8071:8071"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "ostock_dev"
    networks:
      backend:
        aliases:
          - "config-server"

  licensing-service:
    image: ostock/licensing-service:0.0.1-SNAPSHOT
    depends_on:
      database:
        condition: service_healthy
      config-server:
        condition: service_started
    ports:
      - "8080:8080"
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://config-server:8071"
      CONFIGSERVER_PORT: "8071"
    networks:
      backend:
        aliases:
          - "license-service"

networks:
  backend:
    driver: bridge